{"version":3,"sources":["pictures/citrus-1.png","pictures/citrus-2.png","components/Home.js","components/About.js","components/Citrus.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","history","useHistory","useEffect","className","onClick","push","class","href","About","to","Citrus","src","citrus1","citrus2","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,gOCqD5BC,MAhDf,WACC,IAAMC,EAAUC,cAIhB,OAFAC,qBAAU,eAGT,yBAAKC,UAAU,kBACd,4BAAQA,UAAU,eACjB,wBAAIC,QAAS,kBAAMJ,EAAQK,KAAK,OAAhC,mBAED,yBAAKF,UAAU,eACd,yBAAKG,MAAM,gBAAgBF,QAAS,kBAAMJ,EAAQK,KAAK,aACtD,wBAAIF,UAAU,oBAAd,YAED,yBAAKG,MAAM,iBACV,wBAAIH,UAAU,oBAAd,iBAED,yBAAKG,MAAM,iBACV,wBAAIH,UAAU,oBAAd,YAED,yBAAKG,MAAM,iBACV,wBAAIH,UAAU,oBAAd,UAGF,yBAAKA,UAAU,gBACd,8BACC,uBAAGA,UAAU,YAAYI,KAAK,qCAA9B,YAID,8BACC,uBACCJ,UAAU,YACVI,KAAK,4CAFN,cAOD,8BACC,uBAAGJ,UAAU,YAAYI,KAAK,oCAA9B,cC5BUC,MAbf,WACC,OACC,6BACC,qCACA,6BACC,8BACC,kBAAC,IAAD,CAAMC,GAAG,KAAT,Y,0CCwHUC,MA1Hf,WACC,IAAMV,EAAUC,cAChB,OACC,yBAAKE,UAAU,oBACd,4BAAQA,UAAU,iBACjB,wBAAIC,QAAS,kBAAMJ,EAAQK,KAAK,OAAhC,mBAED,yBAAKF,UAAU,iBACd,8BACC,uBAAGA,UAAU,YAAYI,KAAK,qCAA9B,YAID,8BACC,uBACCJ,UAAU,YACVI,KAAK,4CAFN,cAOD,8BACC,uBAAGJ,UAAU,YAAYI,KAAK,oCAA9B,YAKF,yBAAKJ,UAAU,kBACd,yBAAKA,UAAU,oBACd,yBACCG,MAAM,+BACNF,QAAS,kBAAMJ,EAAQK,KAAK,aAE5B,wBAAIF,UAAU,qBAAd,YAED,yBAAKG,MAAM,gCACV,wBAAIH,UAAU,qBAAd,iBAED,yBAAKG,MAAM,gCACV,wBAAIH,UAAU,qBAAd,YAED,yBAAKG,MAAM,gCACV,wBAAIH,UAAU,qBAAd,UAGF,yBAAKA,UAAU,iBACd,yBAAKA,UAAU,wBACd,yBAAKA,UAAU,8BACd,sCACA,yEAED,yBAAKA,UAAU,sCACd,yBAAKA,UAAU,qBAAqBQ,IAAKC,MACzC,yBAAKT,UAAU,qBAAqBQ,IAAKE,QAG3C,yBAAKV,UAAU,uBACd,yBAAKA,UAAU,6BACd,6CAED,yBAAKA,UAAU,4BACd,2MAKA,6BACA,gPAMA,6BACA,8LAOF,yBAAKA,UAAU,0BACd,yBAAKA,UAAU,gCACd,sDAED,yBAAKA,UAAU,+BACd,sMAKA,oEACA,4BACC,uCACA,0CACA,uCACA,wCACA,2DACA,8CAIH,yBAAKA,UAAU,0BACd,yBAAKA,UAAU,4BACd,yBAAKA,UAAU,iCACd,qCACA,qGAKD,yBAAKA,UAAU,0CACd,sD,MCtGOW,MAVf,WACC,OACC,kBAAC,IAAD,CAAYC,SAAS,KACpB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IACjC,kBAAC,IAAD,CAAOkB,KAAK,SAASC,UAAWV,IAChC,kBAAC,IAAD,CAAOS,KAAK,UAAUC,UAAWR,MCAhBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1d186f3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/citrus-1.b30d4c40.png\";","module.exports = __webpack_public_path__ + \"static/media/citrus-2.cb85bbc2.png\";","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport '../styles/Home.css';\n\nfunction Home() {\n\tconst history = useHistory();\n\n\tuseEffect(() => {});\n\n\treturn (\n\t\t<div className='Home-container'>\n\t\t\t<header className='Home-Header'>\n\t\t\t\t<h2 onClick={() => history.push('/')}>Justin Hattrup</h2>\n\t\t\t</header>\n\t\t\t<div className='Home-scroll'>\n\t\t\t\t<div class='block block-1' onClick={() => history.push('/citrus')}>\n\t\t\t\t\t<h1 className='Home-block-title'>Citrus.</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class='block block-2'>\n\t\t\t\t\t<h1 className='Home-block-title'>Supreme Bot.</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class='block block-3'>\n\t\t\t\t\t<h1 className='Home-block-title'>Watson.</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class='block block-4'>\n\t\t\t\t\t<h1 className='Home-block-title'>ERS.</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='Home-socials'>\n\t\t\t\t<span>\n\t\t\t\t\t<a className='Home-link' href='https://twitter.com/JustinHattrup'>\n\t\t\t\t\t\tTwitter\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='Home-link'\n\t\t\t\t\t\thref='https://www.instagram.com/justinhattrup/'\n\t\t\t\t\t>\n\t\t\t\t\t\tInstagram\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<a className='Home-link' href='https://github.com/JustinHattrup'>\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction About() {\n\treturn (\n\t\t<div>\n\t\t\t<h1>About</h1>\n\t\t\t<div>\n\t\t\t\t<span>\n\t\t\t\t\t<Link to='/'>Home</Link>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default About;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Citrus.css';\n\nimport citrus1 from '../pictures/citrus-1.png';\nimport citrus2 from '../pictures/citrus-2.png';\n\nfunction Citrus() {\n\tconst history = useHistory();\n\treturn (\n\t\t<div className='Citrus-container'>\n\t\t\t<header className='Citrus-Header'>\n\t\t\t\t<h2 onClick={() => history.push('/')}>Justin Hattrup</h2>\n\t\t\t</header>\n\t\t\t<div className='Citrus-footer'>\n\t\t\t\t<span>\n\t\t\t\t\t<a className='Home-link' href='https://twitter.com/JustinHattrup'>\n\t\t\t\t\t\tTwitter\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='Home-link'\n\t\t\t\t\t\thref='https://www.instagram.com/justinhattrup/'\n\t\t\t\t\t>\n\t\t\t\t\t\tInstagram\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<a className='Home-link' href='https://github.com/JustinHattrup'>\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className='Citrus-content'>\n\t\t\t\t<div className='Citrus-portfolio'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass='Citrus-portfolio-item item-1'\n\t\t\t\t\t\tonClick={() => history.push('/citrus')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h1 className='Citrus-item-title'>Citrus.</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='Citrus-portfolio-item item-2'>\n\t\t\t\t\t\t<h1 className='Citrus-item-title'>Supreme Bot.</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='Citrus-portfolio-item item-3'>\n\t\t\t\t\t\t<h1 className='Citrus-item-title'>Watson.</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='Citrus-portfolio-item item-4'>\n\t\t\t\t\t\t<h1 className='Citrus-item-title'>ERS.</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='Citrus-body-1'>\n\t\t\t\t\t<div className='Citrus-body-1-header'>\n\t\t\t\t\t\t<div className='Citrus-body-1-header-title'>\n\t\t\t\t\t\t\t<h1>Citrus</h1>\n\t\t\t\t\t\t\t<h3>Create and share playlists with everyone</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Citrus-body-1-header-img-container'>\n\t\t\t\t\t\t\t<img className='Citrus-body-1-img1' src={citrus1}></img>\n\t\t\t\t\t\t\t<img className='Citrus-body-1-img2' src={citrus2}></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Citrus-body-1-about'>\n\t\t\t\t\t\t<div className='Citrus-body-1-about-title'>\n\t\t\t\t\t\t\t<h1>Introduction</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Citrus-body-1-about-info'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tCitrus is essential a youtube api wrapper used to create and\n\t\t\t\t\t\t\t\tshare playlists that consist of music and videos. Playlists each\n\t\t\t\t\t\t\t\thave their own unique link that can be shared.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tI created Citrus mostly for myself because of complaints I have\n\t\t\t\t\t\t\t\twith the Spotify user experience. My main gripe being that I\n\t\t\t\t\t\t\t\twanted to be able to search for new music while seeing whats\n\t\t\t\t\t\t\t\talready in my playlist.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAlso I'm too cheap and thought I could make a streaming service\n\t\t\t\t\t\t\t\tmyself without much effort leveraging the youtube api and\n\t\t\t\t\t\t\t\tyoutube embed feature. ðŸ˜Š\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Citrus-body-1-learning'>\n\t\t\t\t\t\t<div className='Citrus-body-1-learning-title'>\n\t\t\t\t\t\t\t<h1>A learning experience</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Citrus-body-1-learning-info'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThis project provided a perfect test for my full stack web\n\t\t\t\t\t\t\t\tdevelpment skills and to create something actually usable, while\n\t\t\t\t\t\t\t\tlearning some new technology along the way.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<h2>All technology included in this app:</h2>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Node.js</li>\n\t\t\t\t\t\t\t\t<li>Express.js</li>\n\t\t\t\t\t\t\t\t<li>MongoDB</li>\n\t\t\t\t\t\t\t\t<li>React.js</li>\n\t\t\t\t\t\t\t\t<li>JWT for User Authentication</li>\n\t\t\t\t\t\t\t\t<li>Youtube API</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Citrus-body-1-features'>\n\t\t\t\t\t\t<div className='Citrus-body-1-features-1'>\n\t\t\t\t\t\t\t<div className='Citrus-body-1-features-1-info'>\n\t\t\t\t\t\t\t\t<h1>Title</h1>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLorem do culpa ad et velit eu ex aliqua nostrud quis ex elit\n\t\t\t\t\t\t\t\t\tdo elit.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='Citrus-body-1-features-1-img-container'>\n\t\t\t\t\t\t\t\t<h1>image goes here</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Citrus;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Citrus from './components/Citrus';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t\t<Route exact path='/' component={Home} />\n\t\t\t<Route path='/about' component={About} />\n\t\t\t<Route path='/citrus' component={Citrus} />\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}